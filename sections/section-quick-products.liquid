<div class="quick-products-main page-width">
    <h1 class="quick-pro-heading">{{section.settings.heading }}</h1>
    <div class="quick-products-wrap">
     {% for pro in section.settings.prolist %}
     {% if pro.featured_image != blank %}
      <div class="quick-pro-item">
       <img src="{{ pro.featured_image | img_url: 'original' }}" width="100%" height="444px" class="quick-pro-img q-pro-img-main">
       <button class="quick-pro-btn" data-target="popup-{{ forloop.index }}">+</button>
      </div>
      <div id="popup-{{forloop.index }}" class="popup">
      <div class="popup-content-inner">

        <span class="close">&times;</span>
        <div class="popup-content-only">
       <div class="quick-pro-img-inner">
       <img src="{{ pro.featured_image | img_url: 'original' }}" width="120px" height="140px" class="quick-pro-img">
        <div class="quick-pro-info">
        <span class="quick-pro-title">{{ pro.title }}</span>
        <span class="quick-pro-price">{{ pro.price | money }}</span>
        {% if pro.description != blank %}
         <span class="quick-pro-description">{{pro.description }}</span>
        {% endif %}
        </div>
      </div>
      <div class="popup-opt-wrap">
       {% for option in pro.options_with_values %}
        {% assign optname = option.name | downcase %}
        {% if optname == 'color' %}
          <div class="color-options">
          <span class="optname">{{ option.name }}</span>
          <div class="optvalues">
          {% for value in option.values %}
            <div class="color-item" style="border-left:5px solid {{ value }}" data-color="{{ value }}">
             <span class="divider"></span>
             <span class="color-item-val val">{{ value }}</span>
          </div>
          {% endfor %}
        </div>
      </div>
        {% endif %}
       
                 {% if optname == 'size' %}
                  <div class="size-options">
          <span class="optname">{{ option.name }}</span>
          <div class="optvalues">
          <select name="size" class="select-size">
            {% if forloop.index == 1 %}
            <option selected disabled hidden>Choose your size</option>
            {% endif %}
          {% for value in option.values %}
           <option value="{{ value }}">{{ value }}</option>
          {% endfor %}
          </select>
        </div>
        </div>
          {% endif %}
       
       {% endfor %}
      </div>
      <div class="pro-card-val" style="display:none;visibility:hidden;">
       {% for variant in pro.variants %}
        {% if variant.available %}
        <input type="hidden" class="pro-val" data-id="{{ variant.id }}" data-size="{{ variant.option1 }}" data-color="{{ variant.option2 }}">
        {% endif %}
       {% endfor %}
      </div>
      <button class="add-pro-btn" >Add to Cart</button>
      </div>
      <div class="popup-success">
        <div class="popup-success-icon-wrap">
        <svg width="100px" height="100px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <rect width="24" height="24" fill="white"></rect> <path fill-rule="evenodd" clip-rule="evenodd" d="M9.55879 3.6972C10.7552 2.02216 13.2447 2.02216 14.4412 3.6972L14.6317 3.96387C14.8422 4.25867 15.1958 4.41652 15.5558 4.37652L16.4048 4.28218C18.3156 4.06988 19.9301 5.68439 19.7178 7.59513L19.6235 8.44415C19.5835 8.8042 19.7413 9.15774 20.0361 9.36831L20.3028 9.55879C21.9778 10.7552 21.9778 13.2447 20.3028 14.4412L20.0361 14.6317C19.7413 14.8422 19.5835 15.1958 19.6235 15.5558L19.7178 16.4048C19.9301 18.3156 18.3156 19.9301 16.4048 19.7178L15.5558 19.6235C15.1958 19.5835 14.8422 19.7413 14.6317 20.0361L14.4412 20.3028C13.2447 21.9778 10.7553 21.9778 9.55879 20.3028L9.36831 20.0361C9.15774 19.7413 8.8042 19.5835 8.44414 19.6235L7.59513 19.7178C5.68439 19.9301 4.06988 18.3156 4.28218 16.4048L4.37652 15.5558C4.41652 15.1958 4.25867 14.8422 3.96387 14.6317L3.6972 14.4412C2.02216 13.2447 2.02216 10.7553 3.6972 9.55879L3.96387 9.36831C4.25867 9.15774 4.41652 8.8042 4.37652 8.44414L4.28218 7.59513C4.06988 5.68439 5.68439 4.06988 7.59513 4.28218L8.44415 4.37652C8.8042 4.41652 9.15774 4.25867 9.36831 3.96387L9.55879 3.6972ZM15.7071 9.29289C16.0976 9.68342 16.0976 10.3166 15.7071 10.7071L11.8882 14.526C11.3977 15.0166 10.6023 15.0166 10.1118 14.526L8.29289 12.7071C7.90237 12.3166 7.90237 11.6834 8.29289 11.2929C8.68342 10.9024 9.31658 10.9024 9.70711 11.2929L11 12.5858L14.2929 9.29289C14.6834 8.90237 15.3166 8.90237 15.7071 9.29289Z" fill="#41ec44"></path> </g></svg>
      <h4>Added to Cart :)</h4>
      </div>
      <div class="go-cart-btn">
      <svg width="20px" height="20px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M2 3L2.26491 3.0883C3.58495 3.52832 4.24497 3.74832 4.62248 4.2721C5 4.79587 5 5.49159 5 6.88304V9.5C5 12.3284 5 13.7426 5.87868 14.6213C6.75736 15.5 8.17157 15.5 11 15.5H13M19 15.5H17" stroke="#ffffff" stroke-width="1.5" stroke-linecap="round"></path> <path d="M7.5 18C8.32843 18 9 18.6716 9 19.5C9 20.3284 8.32843 21 7.5 21C6.67157 21 6 20.3284 6 19.5C6 18.6716 6.67157 18 7.5 18Z" stroke="#ffffff" stroke-width="1.5"></path> <path d="M16.5 18.0001C17.3284 18.0001 18 18.6716 18 19.5001C18 20.3285 17.3284 21.0001 16.5 21.0001C15.6716 21.0001 15 20.3285 15 19.5001C15 18.6716 15.6716 18.0001 16.5 18.0001Z" stroke="#ffffff" stroke-width="1.5"></path> <path d="M5 6H8M5.5 13H16.0218C16.9812 13 17.4609 13 17.8366 12.7523C18.2123 12.5045 18.4013 12.0636 18.7792 11.1818L19.2078 10.1818C20.0173 8.29294 20.4221 7.34853 19.9775 6.67426C19.5328 6 18.5054 6 16.4504 6H12" stroke="#ffffff" stroke-width="1.5" stroke-linecap="round"></path> </g></svg>
      <span class="go-cart-txt">Go to Cart</span>
      </div>
      </div>
      </div>  

    </div>
     {% endif %}
    {% endfor %}
    </div>
</div>
<script>

document.querySelectorAll('.quick-pro-btn').forEach(btn => {
  btn.addEventListener('click', function() {
    let targetId = this.getAttribute('data-target');
    document.getElementById(targetId).style.display = 'flex';
    firstcoloritem();
  });
});

document.querySelectorAll('.popup .close').forEach(closeBtn => {
  closeBtn.addEventListener('click', function() {
    this.closest('.popup').style.display = 'none';
  });
});

window.addEventListener('click', function(e) {
  document.querySelectorAll('.popup').forEach(popup => {
    if (e.target === popup) {
      popup.style.display = 'none';
    }
  });
});


function firstcoloritem(){
document.querySelectorAll('.popup').forEach(function(popup){
  let firstcolor = popup.querySelector('.color-item');
  if(firstcolor){
   firstcolor.classList.add('active');
  }
});
}
firstcoloritem();
document.querySelectorAll('.color-item').forEach(function(item){
  item.addEventListener('click',function(){
    document.querySelectorAll('.color-item').forEach(function(c){
      c.classList.remove("active");
    });
    this.classList.add("active");
  });
});
document.querySelectorAll('.add-pro-btn').forEach(function(btn){
  btn.addEventListener('click', function(){

    let popup = this.closest('.popup');
    let activeColor = popup.querySelector('.color-item.active');
    let selectedColor = activeColor ? activeColor.getAttribute('data-color') : null;

    let sizeSelect = popup.querySelector('select[name="size"]');
    let selectedSize = sizeSelect ? sizeSelect.value : null;

    if(!selectedColor || !selectedSize){
      alert("Please select Color & Size");
      return;
    }

    let variants = popup.querySelectorAll('.pro-val');
    let matchedVariant = null;

    variants.forEach(function(variant){
      if(
        variant.getAttribute('data-color') === selectedColor &&
        variant.getAttribute('data-size') === selectedSize
      ){
        matchedVariant = variant;
      }
    });

    if(matchedVariant){
      let variantId = matchedVariant.getAttribute('data-id');

      fetch('/cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          id: variantId,
          quantity: 1
        })
      })
      .then(res => res.json())
      .then(data => {
        /*alert("Added to cart!");
        console.log(data);*/
        popup.querySelector('.popup-content-only').style.display = 'none';
        popup.querySelector('.popup-success').style.display = 'flex';
        document.querySelectorAll('.go-cart-btn').forEach(function(gobtn){
         gobtn.addEventListener('click',function(){
        window.location.href = "/cart";
        });
        });
   
      })
      .catch(err => {
        console.error(err);
        alert("Error adding to cart");
      });
    } else {
      alert("No matching variant found");
    }

  });
});

</script>
{% schema %}
{
"name": "Section Quick Products",
"class": "section-quick-products",
"settings": [
    {
    "type": "text",
    "id": "heading",
    "label": "Heading",
    "default": "Tisso vison in the wild"
    },
    {
    "type": "product_list",
    "id": "prolist",
    "label": "Select Products"
    }
],
"presets":[
    {
    "name": "Section Quick Products"
    }
]
}
{% endschema %}